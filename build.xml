<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="main" name="nlgservice" basedir=".">
	
    <property name="src.dir" value="src"/>
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	<property name="run.dir" value="${dist.dir}/run" />
	<property name="docs.dir" value="docs" />
	<property name="test.dir" value="test/NLGService/test"/>
    <property name="lib.dir" value="lib"/>

    <property name="main-class"  value="NLGService.WYSIWYM.testclasses.TestTextGeneratorUtils"/>
    	
    <path id="compile.classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    	<pathelement path="${build.dir}"/>
    </path>
	
	<path id="test.classpath">
		<path refid="compile.classpath"/>
		<pathelement location="${build.dir}/classes"/>
		<pathelement location="${build.dir}/test"/>
	</path>
	
	<path id="run.classpath">
            <path refid="compile.classpath"/>
        	<path location="${build.dir}/classes"/>
	</path>

	
	<!-- Deletes the existing build, docs and dist directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${run.dir}" />
	</target>
			
	<!-- Creates the  build, docs and dist directory-->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${run.dir}"/>
		<mkdir dir="${build.dir}/classes"/>
		<mkdir dir="${build.dir}/test"/>
		<mkdir dir="${build.dir}/test/data"/>
	</target>
	
	<!-- Compiles the java code (including the usage of library for JUnit) -->
	<target name="compile" depends="clean, makedir">
		<javac srcdir="${src.dir}" destdir="${build.dir}/classes" classpathref="compile.classpath">
		</javac>
		<javac srcdir="${test.dir}" destdir="${build.dir}/test" classpathref="test.classpath">
		</javac>
		
		<copy todir="${build.dir}/test/data">
			<fileset dir="test" excludes="**/*.java"/>
		</copy>
	</target>
			
	<!-- Creates Javadoc -->
	<target name="docs" depends="compile">
		<javadoc classpathref="compile.classpath" packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
			<!-- Define which files / directory should get included, we include all -->
			<fileset dir="${src.dir}">
				<include name="**" />
			</fileset>
		</javadoc>
	</target>
				
	<!--Creates the executable jar file  -->
	<target name="jarRun" depends="compile">
		<jar destfile="${run.dir}/${ant.project.name}.jar">
			<fileset dir="${build.dir}/classes"/>
			<fileset dir="${build.dir}/test"/>
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
			<!-- includes required jar files in the build -->
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>
			
	<!--Creates the deployable jar file (without libs) -->
	<target name="jar" depends="compile">
		<jar destfile="${dist.dir}/${ant.project.name}.jar">
			<fileset dir="${build.dir}/classes"/>
			<fileset dir="${build.dir}/test"/>
		</jar>
	</target>
	
    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath refid="run.classpath"/>
        </java>
    </target>

    <target name="junit">
        <junit printsummary="yes">
        	<formatter type="brief" usefile="false"/>
            <classpath refid="test.classpath"/>
            <batchtest fork="no">
                <fileset dir="${build.dir}/test" includes="**/*Test.class"/>
            </batchtest>
        </junit>
    </target>

	<target name="main" depends="compile, jar, jarRun, docs"/>
	<target name="test" depends="junit, run"/>
</project>
